name: Run Collector

on:
  push:
    branches: [engine-development]
    
jobs:
  run-collector:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: pip install google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      - name: Run GCP Access Collector
        env: 
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          set -euo pipefail
          python3 engine/engine/GCPAccess.py
          if [ -f iam_policy.json ]; then
            mv -f iam_policy.json engine/test-configs/iam_policy.json
          elif [ -f engine/engine/iam_policy.json ]; then
            mv -f engine/engine/iam_policy.json engine/test-configs/iam_policy.json
          else
            echo "ERROR: iam_policy.json not found"; exit 1
          fi
          if [ -f networks.json ]; then
            mv -f networks.json engine/test-configs/networks.json
          elif [ -f engine/engine/networks.json ]; then
            mv -f engine/engine/networks.json engine/test-configs/networks.json
          else
            echo "ERROR: networks.json not found"; exit 1
          fi
          if [ -f firewalls.json ]; then
            mv -f firewalls.json engine/test-configs/firewalls.json
          elif [ -f engine/engine/firewalls.json ]; then
            mv -f engine/engine/firewalls.json engine/test-configs/firewalls.json
          else
            echo "ERROR: firewalls.json not found"; exit 1
          fi
          if [ -f ComputeInstances.json ]; then
            mv -f ComputeInstances.json engine/test-configs/ComputeInstances.json
          elif [ -f engine/engine/ComputeInstances.json ]; then
            mv -f engine/engine/ComputeInstances.json engine/test-configs/ComputeInstances.json
          else
            echo "ERROR: ComputeInstances.json not found"; exit 1
          fi

      - name: Commit and push IAM policy & networks config
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add engine/test-configs/iam_policy.json
          git add engine/test-configs/networks.json
          git add engine/test-configs/firewalls.json
          git add engine/test-configs/ComputeInstances.json
          echo "Staged changes:"
          git diff --cached --name-only
          if git diff --cached --quiet; then
            echo "No changes to commit (either identical content or nothing staged)."
          else
            git commit -m "Update iam_policy.json & networks.json & firewalls.json & ComputeInstances.json"
            git push origin engine-development
          fi
          
        
